// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:4.0.30319.42000
// 
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Diagnostics;

namespace DataTools.Interop.My.Resources
{

    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [DebuggerNonUserCode()]
    [System.Runtime.CompilerServices.CompilerGenerated()]
    public class LocalizedMessages
    {
        private static System.Resources.ResourceManager resourceMan;
        private static System.Globalization.CultureInfo resourceCulture;

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizedMessages() : base()
        {
        }

        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public static System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (ReferenceEquals(resourceMan, null))
                {
                    var temp = new System.Resources.ResourceManager("DataTools.Interop.LocalizedMessages", typeof(LocalizedMessages).Assembly);
                    resourceMan = temp;
                }

                return resourceMan;
            }
        }

        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public static System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }

            set
            {
                resourceCulture = value;
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Failed to register application for restart due to bad parameters..
        /// </summary>
        public static string ApplicationRecoverFailedToRegisterForRestartBadParameters
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoverFailedToRegisterForRestartBadParameters", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Application was not registered for recovery due to bad parameters..
        /// </summary>
        public static string ApplicationRecoveryBadParameters
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryBadParameters", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Application failed to register for recovery..
        /// </summary>
        public static string ApplicationRecoveryFailedToRegister
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryFailedToRegister", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Application failed to registered for restart..
        /// </summary>
        public static string ApplicationRecoveryFailedToRegisterForRestart
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryFailedToRegisterForRestart", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Unregister for recovery failed..
        /// </summary>
        public static string ApplicationRecoveryFailedToUnregister
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryFailedToUnregister", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Unregister for restart failed..
        /// </summary>
        public static string ApplicationRecoveryFailedToUnregisterForRestart
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryFailedToUnregisterForRestart", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to This method must be called from the registered callback method..
        /// </summary>
        public static string ApplicationRecoveryMustBeCalledFromCallback
        {
            get
            {
                return ResourceManager.GetString("ApplicationRecoveryMustBeCalledFromCallback", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to ACOnline: {1}{0}Max Charge: {2} mWh{0}Current Charge: {3} mWh{0}Discharge Rate: {4} mWh{0}Estimated Time Remaining: {5}{0}Suggested Critical Battery Charge: {6} mWh{0}Suggested Battery Warning Charge: {7} mWh{0}.
        /// </summary>
        public static string BatteryStateStringRepresentation
        {
            get
            {
                return ResourceManager.GetString("BatteryStateStringRepresentation", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Cancelable cannot be changed while dialog is showing..
        /// </summary>
        public static string CancelableCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("CancelableCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog caption cannot be changed while dialog is showing..
        /// </summary>
        public static string CaptionCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("CaptionCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to CheckBox text cannot be changed while dialog is showing..
        /// </summary>
        public static string CheckBoxCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("CheckBoxCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Collapsed control text cannot be changed while dialog is showing..
        /// </summary>
        public static string CollapsedTextCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("CollapsedTextCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Only supported on Windows 7 or newer..
        /// </summary>
        public static string CoreHelpersRunningOn7
        {
            get
            {
                return ResourceManager.GetString("CoreHelpersRunningOn7", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Only supported on Windows 8 or newer..
        /// </summary>
        public static string CoreHelpersRunningOn8
        {
            get
            {
                return ResourceManager.GetString("CoreHelpersRunningOn8", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Only supported on Windows 8.1 or newer..
        /// </summary>
        public static string CoreHelpersRunningOn81
        {
            get
            {
                return ResourceManager.GetString("CoreHelpersRunningOn81", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Only supported on Windows Vista or newer..
        /// </summary>
        public static string CoreHelpersRunningOnVista
        {
            get
            {
                return ResourceManager.GetString("CoreHelpersRunningOnVista", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Only supported on Windows XP or newer..
        /// </summary>
        public static string CoreHelpersRunningOnXp
        {
            get
            {
                return ResourceManager.GetString("CoreHelpersRunningOnXp", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog cannot have more than one control with the same name..
        /// </summary>
        public static string DialogCollectionCannotHaveDuplicateNames
        {
            get
            {
                return ResourceManager.GetString("DialogCollectionCannotHaveDuplicateNames", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog control must be removed from current collections first..
        /// </summary>
        public static string DialogCollectionControlAlreadyHosted
        {
            get
            {
                return ResourceManager.GetString("DialogCollectionControlAlreadyHosted", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Control name cannot be null or zero length..
        /// </summary>
        public static string DialogCollectionControlNameNull
        {
            get
            {
                return ResourceManager.GetString("DialogCollectionControlNameNull", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Modifying controls collection while dialog is showing is not supported..
        /// </summary>
        public static string DialogCollectionModifyShowingDialog
        {
            get
            {
                return ResourceManager.GetString("DialogCollectionModifyShowingDialog", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog control name cannot be empty or null..
        /// </summary>
        public static string DialogControlNameCannotBeEmpty
        {
            get
            {
                return ResourceManager.GetString("DialogControlNameCannotBeEmpty", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog controls cannot be renamed..
        /// </summary>
        public static string DialogControlsCannotBeRenamed
        {
            get
            {
                return ResourceManager.GetString("DialogControlsCannotBeRenamed", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Application.
        /// </summary>
        public static string DialogDefaultCaption
        {
            get
            {
                return ResourceManager.GetString("DialogDefaultCaption", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to .
        /// </summary>
        public static string DialogDefaultContent
        {
            get
            {
                return ResourceManager.GetString("DialogDefaultContent", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to .
        /// </summary>
        public static string DialogDefaultMainInstruction
        {
            get
            {
                return ResourceManager.GetString("DialogDefaultMainInstruction", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Expanded information mode cannot be changed while dialog is showing..
        /// </summary>
        public static string ExpandedDetailsCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("ExpandedDetailsCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Expanded control label cannot be changed while dialog is showing..
        /// </summary>
        public static string ExpandedLabelCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("ExpandedLabelCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Expanding state of the dialog cannot be changed while dialog is showing..
        /// </summary>
        public static string ExpandingStateCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("ExpandingStateCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Hyperlinks cannot be enabled/disabled while dialog is showing..
        /// </summary>
        public static string HyperlinksCannotBetSet
        {
            get
            {
                return ResourceManager.GetString("HyperlinksCannotBetSet", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Reference path is invalid..
        /// </summary>
        public static string InvalidReferencePath
        {
            get
            {
                return ResourceManager.GetString("InvalidReferencePath", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to The specified event handler has not been registered..
        /// </summary>
        public static string MessageManagerHandlerNotRegistered
        {
            get
            {
                return ResourceManager.GetString("MessageManagerHandlerNotRegistered", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to An error has occurred in dialog configuration..
        /// </summary>
        public static string NativeTaskDialogConfigurationError
        {
            get
            {
                return ResourceManager.GetString("NativeTaskDialogConfigurationError", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Invalid arguments to Win32 call..
        /// </summary>
        public static string NativeTaskDialogInternalErrorArgs
        {
            get
            {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorArgs", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog contents too complex..
        /// </summary>
        public static string NativeTaskDialogInternalErrorComplex
        {
            get
            {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorComplex", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to An unexpected internal error occurred in the Win32 call: {0:x}.
        /// </summary>
        public static string NativeTaskDialogInternalErrorUnexpected
        {
            get
            {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorUnexpected", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to TaskDialog feature needs to load version 6 of comctl32.dll but a different version is current loaded in memory..
        /// </summary>
        public static string NativeTaskDialogVersionError
        {
            get
            {
                return ResourceManager.GetString("NativeTaskDialogVersionError", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog owner cannot be changed while dialog is showing..
        /// </summary>
        public static string OwnerCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("OwnerCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to SetThreadExecutionState call failed..
        /// </summary>
        public static string PowerExecutionStateFailed
        {
            get
            {
                return ResourceManager.GetString("PowerExecutionStateFailed", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to The caller had insufficient access rights to get the system battery state..
        /// </summary>
        public static string PowerInsufficientAccessBatteryState
        {
            get
            {
                return ResourceManager.GetString("PowerInsufficientAccessBatteryState", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to The caller had insufficient access rights to get the system power capabilities..
        /// </summary>
        public static string PowerInsufficientAccessCapabilities
        {
            get
            {
                return ResourceManager.GetString("PowerInsufficientAccessCapabilities", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Failed to get active power scheme..
        /// </summary>
        public static string PowerManagerActiveSchemeFailed
        {
            get
            {
                return ResourceManager.GetString("PowerManagerActiveSchemeFailed", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Battery is not present on this system..
        /// </summary>
        public static string PowerManagerBatteryNotPresent
        {
            get
            {
                return ResourceManager.GetString("PowerManagerBatteryNotPresent", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Progress bar cannot be changed while dialog is showing..
        /// </summary>
        public static string ProgressBarCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("ProgressBarCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Progress bar cannot be hosted in multiple dialogs..
        /// </summary>
        public static string ProgressBarCannotBeHostedInMultipleDialogs
        {
            get
            {
                return ResourceManager.GetString("ProgressBarCannotBeHostedInMultipleDialogs", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to {0}, {1}.
        /// </summary>
        public static string PropertyKeyFormatString
        {
            get
            {
                return ResourceManager.GetString("PropertyKeyFormatString", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Unable to initialize PropVariant..
        /// </summary>
        public static string PropVariantInitializationError
        {
            get
            {
                return ResourceManager.GetString("PropVariantInitializationError", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Multi-dimensional SafeArrays not supported..
        /// </summary>
        public static string PropVariantMultiDimArray
        {
            get
            {
                return ResourceManager.GetString("PropVariantMultiDimArray", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to String argument cannot be null or empty..
        /// </summary>
        public static string PropVariantNullString
        {
            get
            {
                return ResourceManager.GetString("PropVariantNullString", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to This Value type is not supported..
        /// </summary>
        public static string PropVariantTypeNotSupported
        {
            get
            {
                return ResourceManager.GetString("PropVariantTypeNotSupported", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Cannot be cast to unsupported type..
        /// </summary>
        public static string PropVariantUnsupportedType
        {
            get
            {
                return ResourceManager.GetString("PropVariantUnsupportedType", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to delegate: {0}, state: {1}, ping: {2}.
        /// </summary>
        public static string RecoverySettingsFormatString
        {
            get
            {
                return ResourceManager.GetString("RecoverySettingsFormatString", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to command: {0} restrictions: {1}.
        /// </summary>
        public static string RestartSettingsFormatString
        {
            get
            {
                return ResourceManager.GetString("RestartSettingsFormatString", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to StandardButtons cannot be changed while dialog is showing..
        /// </summary>
        public static string StandardButtonsCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("StandardButtonsCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Startup location cannot be changed while dialog is showing..
        /// </summary>
        public static string StartupLocationCannotBeChanged
        {
            get
            {
                return ResourceManager.GetString("StartupLocationCannotBeChanged", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Bad button ID in closing event..
        /// </summary>
        public static string TaskDialogBadButtonId
        {
            get
            {
                return ResourceManager.GetString("TaskDialogBadButtonId", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Button text must be non-empty..
        /// </summary>
        public static string TaskDialogButtonTextEmpty
        {
            get
            {
                return ResourceManager.GetString("TaskDialogButtonTextEmpty", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Check box text must be provided to enable the dialog check box..
        /// </summary>
        public static string TaskDialogCheckBoxTextRequiredToEnableCheckBox
        {
            get
            {
                return ResourceManager.GetString("TaskDialogCheckBoxTextRequiredToEnableCheckBox", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Attempting to close a non-showing dialog..
        /// </summary>
        public static string TaskDialogCloseNonShowing
        {
            get
            {
                return ResourceManager.GetString("TaskDialogCloseNonShowing", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Application.
        /// </summary>
        public static string TaskDialogDefaultCaption
        {
            get
            {
                return ResourceManager.GetString("TaskDialogDefaultCaption", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to .
        /// </summary>
        public static string TaskDialogDefaultContent
        {
            get
            {
                return ResourceManager.GetString("TaskDialogDefaultContent", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to .
        /// </summary>
        public static string TaskDialogDefaultMainInstruction
        {
            get
            {
                return ResourceManager.GetString("TaskDialogDefaultMainInstruction", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Cannot have more than one default button of a given type..
        /// </summary>
        public static string TaskDialogOnlyOneDefaultControl
        {
            get
            {
                return ResourceManager.GetString("TaskDialogOnlyOneDefaultControl", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Maximum value provided must be greater than the minimum value..
        /// </summary>
        public static string TaskDialogProgressBarMaxValueGreaterThanMin
        {
            get
            {
                return ResourceManager.GetString("TaskDialogProgressBarMaxValueGreaterThanMin", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Minimum value provided must be a positive number..
        /// </summary>
        public static string TaskDialogProgressBarMinValueGreaterThanZero
        {
            get
            {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueGreaterThanZero", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Minimum value provided must less than the maximum value..
        /// </summary>
        public static string TaskDialogProgressBarMinValueLessThanMax
        {
            get
            {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueLessThanMax", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Value provided must be greater than equal to the minimum value and less than the maximum value..
        /// </summary>
        public static string TaskDialogProgressBarValueInRange
        {
            get
            {
                return ResourceManager.GetString("TaskDialogProgressBarValueInRange", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog cannot display both non-standard buttons and standard buttons..
        /// </summary>
        public static string TaskDialogSupportedButtonsAndButtons
        {
            get
            {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndButtons", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Dialog cannot display both non-standard buttons and command links..
        /// </summary>
        public static string TaskDialogSupportedButtonsAndLinks
        {
            get
            {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndLinks", resourceCulture);
            }
        }

        /// <summary>
        /// Looks up a localized string similar to Unknown dialog control type..
        /// </summary>
        public static string TaskDialogUnkownControl
        {
            get
            {
                return ResourceManager.GetString("TaskDialogUnkownControl", resourceCulture);
            }
        }
    }
}